import{P as N}from"./PureTaskList-WeolkBKE.js";import{c as B,e as x,o as l,g as P,a as k,d as a,z as w}from"./vue.esm-bundler-D5_F-1X6.js";import{d as E}from"./pinia-B2CQCpRd.js";import{_ as I}from"./Task-PTLexs9X.js";import{w as A,a as d}from"./index-DLz49pOH.js";const V=[{id:"1",title:"Something",state:"TASK_INBOX"},{id:"2",title:"Something more",state:"TASK_INBOX"},{id:"3",title:"Something else",state:"TASK_INBOX"},{id:"4",title:"Something again",state:"TASK_INBOX"}],K=E({id:"taskbox",state:()=>({tasks:V,status:"idle",error:null}),actions:{archiveTask(s){const e=this.tasks.find(t=>t.id===s);e&&(e.state="TASK_ARCHIVED")},pinTask(s){const e=this.tasks.find(t=>t.id===s);e&&(e.state="TASK_PINNED")}},getters:{getFilteredTasks:s=>s.tasks.filter(t=>t.state==="TASK_INBOX"||t.state==="TASK_PINNED")}}),L={components:{PureTaskList:N},name:"TaskList",setup(){const s=K();return{tasks:B(()=>s.getFilteredTasks),archiveTask:r=>s.archiveTask(r),pinTask:r=>s.pinTask(r)}}};function D(s,e,t,n,r,y){const p=x("PureTaskList");return l(),P(p,{tasks:n.tasks,onArchiveTask:n.archiveTask,onPinTask:n.pinTask},null,8,["tasks","onArchiveTask","onPinTask"])}const O=I(L,[["render",D]]);L.__docgenInfo={displayName:"TaskList",exportName:"default",description:"",tags:{},sourceFiles:["C:/Users/GJViz/Desktop/Learning/GJVL/VueStory/taskbox/src/components/TaskList.vue"]};const b={name:"PureInboxScreen",components:{TaskList:O},props:{error:{type:Boolean,default:!1}}},$={key:0,class:"page lists-show"},X={key:1,class:"page lists-show"};function C(s,e,t,n,r,y){const p=x("TaskList");return l(),k("div",null,[t.error?(l(),k("div",$,e[0]||(e[0]=[a("div",{class:"wrapper-message"},[a("span",{class:"icon-face-sad"}),a("p",{class:"title-message"},"Oh no!"),a("p",{class:"subtitle-message"},"Something went wrong")],-1)]))):(l(),k("div",X,[e[1]||(e[1]=a("nav",null,[a("h1",{class:"title-page"},"Taskbox")],-1)),w(p)]))])}const F=I(b,[["render",C]]);b.__docgenInfo={displayName:"PureInboxScreen",exportName:"default",description:"",tags:{},props:[{name:"error",type:{name:"boolean"},defaultValue:{func:!1,value:"false"}}],sourceFiles:["C:/Users/GJViz/Desktop/Learning/GJVL/VueStory/taskbox/src/components/PureInboxScreen.vue"]};const H={component:F,title:"PureInboxScreen",tags:["autodocs"]},o={},i={args:{error:!0}},c={play:async({canvasElement:s})=>{const e=A(s);await d.click(e.getByLabelText("pinTask-1")),await d.click(e.getByLabelText("pinTask-3"))}};var m,u,T;o.parameters={...o.parameters,docs:{...(m=o.parameters)==null?void 0:m.docs,source:{originalSource:"{}",...(T=(u=o.parameters)==null?void 0:u.docs)==null?void 0:T.source}}};var f,g,_;i.parameters={...i.parameters,docs:{...(f=i.parameters)==null?void 0:f.docs,source:{originalSource:`{
  args: {
    error: true
  }
}`,...(_=(g=i.parameters)==null?void 0:g.docs)==null?void 0:_.source}}};var S,h,v;c.parameters={...c.parameters,docs:{...(S=c.parameters)==null?void 0:S.docs,source:{originalSource:`{
  play: async ({
    canvasElement
  }) => {
    const canvas = within(canvasElement);
    // Simulates pinning the first task
    await fireEvent.click(canvas.getByLabelText('pinTask-1'));
    // Simulates pinning the third task
    await fireEvent.click(canvas.getByLabelText('pinTask-3'));
  }
}`,...(v=(h=c.parameters)==null?void 0:h.docs)==null?void 0:v.source}}};const R=["Default","Error","WithInteractions"];export{o as Default,i as Error,c as WithInteractions,R as __namedExportsOrder,H as default};
